---
import Container from './Containers/Container.astro';

type Props = {
  id: string;
  title: string;
  color: 'primary' | 'secondary';
  oppositeColor?: 'primary' | 'secondary';
};

const { id, title, color, oppositeColor } = Astro.props;
---

<section id={id} class="wave-section">
  <svg class="wave" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M 450 0 C 275 0 0 52 0 50 V 70 H 1440 V 50 C 1440 50 1320 28 1245 27 C 1100 19 1020 55 875 50 C 710 46 620 0 450 0 Z"
    ></path>
  </svg>

  <div class="container-wrapper">
    <Container>
      <div class="heading">
        <h1 class="title">{title}</h1>
        <div class="heading-slot-content">
          <slot name="heading-slot" />
        </div>
      </div>

      <slot />
    </Container>
  </div>
</section>

<style
  define:vars={{
    'section-color': `var(--c-${color})`,
    'opposite-color': oppositeColor ? `var(--c-${oppositeColor})` : undefined,
  }}
>
  .wave-section {
    --wave-height: 70px;

    & .wave {
      display: block;
      width: 100%;
      height: var(--wave-height);
      background: var(--opposite-color);
      margin-top: -1px; /* Fix for browsers rendering 1px line between svg and div */

      & path {
        fill: var(--section-color);
      }
    }

    & .container-wrapper {
      width: 100%;
      background-color: var(--section-color);
      padding-bottom: 3rem;
    }

    & .heading {
      margin: 0 0 1.5rem;
      display: flex;
      gap: 1rem;

      & .title {
        display: inline-flex;
        font-size: 2rem;
        font-weight: 500;
        margin: 0;
      }

      & .heading-slot-content {
        display: inline-flex;
        gap: 0.5rem;
        justify-content: center;
        align-items: center;
      }
    }
  }
</style>
